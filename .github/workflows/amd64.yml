name: x86-64 Pull and Save Docker Image
on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'alpine:latest'  # 设置默认的 Docker 镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v¾

    - name: Clean up Docker to free space
      run: |
        echo "Cleaning up Docker to free space..."
        docker system prune -a -f
        docker volume prune -f

    - name: Pull Docker Images and Package
      run: |
        images="${{ github.event.inputs.docker_images }}"
        if [[ -z "$images" ]]; then
          echo "No Docker images specified. Exiting."
          exit 1
        fi
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          echo "Pulling and saving image: $image"
          docker pull "${image}" --platform "linux/amd64"
          if [ $? -ne 0 ]; then
            echo "Failed to pull image: $image"
            exit 1
          fi
          # 使用镜像名称作为文件名
          filename="${image//\//_}-amd64.tar"
          docker save "${image}" -o "$filename"
          if [ $? -ne 0 ]; then
            echo "Failed to save image: $image"
            exit 1
          fi
        done

    - name: Combine all Docker image tar files into a single tar file
      run: |
        echo "Combining all Docker image tar files into a single tar file..."
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        combined_filename=""
        for image in "${image_array[@]}"; do
          if [[ -z "$combined_filename" ]]; then
            combined_filename="${image//\//_}-amd64.tar"
          else
            combined_filename="${combined_filename}_${image//\//_}-amd64.tar"
          fi
        done
        # 创建一个临时文件列表
        temp_file_list=$(mktemp)
        for image in "${image_array[@]}"; do
          echo "${image//\//_}-amd64.tar" >> "$temp_file_list"
        done
        # 使用 -T 选项指定文件列表
        tar -cf "$combined_filename" -T "$temp_file_list"
        if [ $? -ne 0 ]; then
          echo "Failed to combine TAR files."
          exit 1
        fi
        # 清理临时文件
        rm "$temp_file_list"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-images-tar
        path: "$combined_filename"
        retention-days: 81  # 将保留天数设置为 81 天 最多可设置90天

    - name: Clean up intermediate files
      run: |
        echo "Cleaning up intermediate files..."
        rm *-amd64.tar
